{"version":3,"sources":["Book.js","BookSearch.js","BookShelf.js","BookHome.js","Not404Found.js","BooksAPI.js","App.js","index.js"],"names":["Book","state","value","changeValue","e","_this","setState","target","callOnChange","props","updateShelf","book","this","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","concat","thumbnail","onChange","shelf","disabled","title","authors","join","Component","BookSearch","_this$props","query","books","searchBook","Link","to","lib","debounceTimeout","placeholder","map","src_Book","key","id","BookShelf","BookHome","getAllBooks","currentlyReading","filter","wantToRead","read","src_BookShelf","Not404Found","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","BooksApp","updateState","BookAPI","catch","console","error","trim","every","getBook","_this2","_this3","Switch","Route","exact","path","render","src_BookHome","src_BookSearch","component","React","ReactDOM","BrowserRouter","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.12e9f3a3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n//Book component to be used in BookShelf and BookSearch\r\nclass Book extends Component {\r\n    state = {\r\n    \tvalue: \"\"\r\n    }\r\n\r\n    //change the state to the value of the select option to keep the value selected after selection\r\n\tchangeValue = (e) => {\r\n    \tthis.setState({\r\n        \tvalue: e.target.value\r\n        })\r\n    }\r\n\r\n    //changes state, updates shelf property on server\r\n\tcallOnChange = (e) => {\r\n\t    this.changeValue(e)\r\n\t    this.props.updateShelf(this.props.book, e.target.value)\r\n    }\r\n    \r\n\trender() {\r\n        const { book } = this.props\r\n    \treturn (\r\n        <li>\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: book.imageLinks ? `url(${book.imageLinks.thumbnail})` : \"none\"}}>{ typeof book.imageLinks === 'undefined' && (<span>No Cover</span>)}</div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <select onChange={ this.callOnChange } value={ this.state.value === \"\" ? book.shelf : this.state.value }>\r\n                            <option value=\"move\" disabled>Move to...</option>\r\n                            <option value=\"currentlyReading\">Currently Reading</option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">None</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-title\">{ book.title }</div>\r\n                <div className=\"book-authors\">{ book.authors ? book.authors.join('; ') : \"No Author\" }</div>\r\n            </div>\r\n\t\t</li> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Book from './Book'\r\nimport {DebounceInput} from 'react-debounce-input'\r\n//Search component\r\nclass BookSearch extends Component {\r\n\r\n\trender() {\r\n\t    const { query,books,searchBook,updateShelf } = this.props\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link className=\"close-search\" to=\"/\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <DebounceInput debounceTimeout={500} placeholder=\"Search by title or author\" value={ query } onChange={ searchBook }/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        { books.map(book => <Book key={ book.id } book={ book } updateShelf={ updateShelf }/>) }\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookSearch","import React, { Component } from 'react'\r\nimport Book from './Book'\r\n//Bookshelf component to be used in Home component\r\nclass BookShelf extends Component {\r\n\trender() {\r\n        const { books,title,updateShelf } = this.props\r\n    \treturn (\r\n        \t<div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{ title }</h2>\r\n                <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    { books.map(book => (<Book key={ book.id } book={ book } updateShelf={ updateShelf }/>)) }\r\n                </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookShelf","import React, { Component } from 'react'\r\nimport BookShelf from './BookShelf'\r\nimport { Link } from 'react-router-dom'\r\n//Home component\r\nclass BookHome extends Component {\r\n\r\n    render() {\r\n        const { getAllBooks,updateShelf } = this.props\r\n        const currentlyReading = getAllBooks.filter(book => {\r\n            return book.shelf === 'currentlyReading'\r\n            })\r\n        const wantToRead = getAllBooks.filter(book => {\r\n            return book.shelf === 'wantToRead'\r\n            })\r\n        const read = getAllBooks.filter(book => {\r\n            return book.shelf === 'read'\r\n            })\r\n    \treturn (\r\n        \t<div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <div>\r\n                <BookShelf title=\"Currently Reading\" books={ currentlyReading } updateShelf={ updateShelf }/>\r\n                <BookShelf title=\"Want To Read\" books={ wantToRead } updateShelf={ updateShelf }/>\r\n                <BookShelf title=\"Read\" books={ read } updateShelf={ updateShelf }/>\r\n                </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n                <Link to=\"/search\">Add a book</Link>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookHome","import React, { Component } from 'react'\r\n\r\nclass Not404Found extends Component {\r\n    render() {\r\n        return (\r\n            <div className='list-books-title'>\r\n                <h1>The page you are looking for does not exist !</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Not404Found","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\nimport BookSearch from './BookSearch'\r\nimport BookHome from './BookHome'\r\nimport Not404Found from './Not404Found'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport './App.css'\r\nimport * as BookAPI from './BooksAPI'\r\n\r\n//Main component\r\nclass BooksApp extends React.Component {\r\n\tstate = {\r\n\t\tgetAllBooks: [],\r\n\t\tquery: '',\r\n\t\tbooks: []\r\n\t}\r\n\r\n\t//get all the books in shelf on render\r\n\tcomponentDidMount() {\r\n\t\tBookAPI.getAll().then(books => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tgetAllBooks: books\r\n\t\t\t})\r\n\t\t}).catch((e) => {\r\n\t\t\tconsole.error(e)\r\n\t\t})\r\n\t}\r\n\r\n\t//update the component state after the update in server\r\n\tupdateState = () => {\r\n\t\tBookAPI.getAll().then(books => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tgetAllBooks: books\r\n\t\t\t})\r\n\t\t}).catch((e) => {\r\n\t\t\tconsole.error(e)\r\n\t\t})\r\n\t}\r\n\r\n\t//updates book's shelf property on the server\r\n\tupdateShelf = (book, shelf) => {\r\n\t\tBookAPI.update(book, shelf).then(() => {\r\n\t\tthis.updateState()\r\n\t\t})\r\n\t}\r\n\r\n\t//search books based on query supplied to the input\r\n\tsearchBook = (e) => {\r\n\t\tvar query = e.target.value.trim()\r\n\t\tthis.setState({\r\n\t\t\t\tquery\r\n\t\t})\r\n\t\tif(query !== \"\") {\r\n\t\t\t\tBookAPI.search(query).then(books => {\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tbooks: books.map(book => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.getAllBooks.every(getBook => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (getBook.id === book.id) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbook.shelf = getBook.shelf;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbook.shelf = \"none\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn book\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tbooks: []\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tconsole.error('No Books returned for the supplied query')\r\n\t\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\t\tbooks: []\r\n\t\t\t})\r\n\t\t\t\tconsole.error('Please enter a valid query')\r\n\t\t}\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\" render={() => <BookHome getAllBooks={this.state.getAllBooks} updateShelf={this.updateShelf}/>}/>\r\n\t\t\t\t\t<Route exact path=\"/search\" render={() => <BookSearch getAllBooks={this.state.getAllBooks} updateShelf={this.updateShelf} searchBook={ this.searchBook } query={ this.state.query } books={ this.state.books }/>}/>\r\n\t\t\t\t\t<Route component={Not404Found}/>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}